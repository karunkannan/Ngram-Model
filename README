//Karun Kannan

Description: This program is a languge processer that uses a Ngram model. It is able
to train from multiple models, and can produce randomly generated outputs based on
commands.

How Does It Work:
The input for the program is as follows:
    ./Ngram file_list.txt n char
    file_list.txt: file that contains file paths for all files that are fed into the
    		   model.
    n: The size of the model, the number words that model is based on. Ex: 2 would be
       a bigram.
    char: There are 4 options: "a","r","c", or "g"
    	  "a": Prints out the Ngram in alphabetical order
	  "r": Prints out the Ngram in reverse alphabetical order
	  "c": Prints out the Ngram based on the number of occurances
	  "g": Prints out randomly generated paragraphs/sentences based on the model.
	       This input requires another integer to follow it, to specify how many
	       outputs should be generated.
	       Ex: ./Ngram file_list.txt 2 g 3 would build a bigram and output 3 things


Files:
	a8.cpp: The driver of the program. This file uses the Language model class to
		drive the program.
	LanguageModel.cpp: This program contains functions that manipulate the Language
			   Model. This includes functions that build the model, print
			   it to a string, as well as generates random output.
	NgramCollection.cpp: Files that manipulate the actual map of Ngrams, and stores
			     all important values. Contains fucntions, to insert words,
			     print to string, and pick words for sentence generation.



